#funciona!
os: linux
arch: ppc64le
dist: bionic
sudo: required
# setup travis so that we can run containers for integration tests
services:
  - docker

language: go

go:
  - "1.14.x"

go_import_path: github.com/opencontainers/runc
go_import_path: github.com/containerd/containerd

addons:
  apt:
    packages:
      - btrfs-tools
      - libnl-3-dev
      - libnet-dev
      - protobuf-c-compiler
      # - protobuf-compiler
      - python-minimal
      - libcap-dev
      - libaio-dev
      - libprotobuf-c0-dev
      - libprotobuf-dev
      - socat
      - libseccomp-dev


before_install:
  #- git clone https://github.com/containerd/containerd.git
  #- cd containerd
  #- uname -r
  #- sudo apt install btrfs-tools libnl-3-dev libnet-dev protobuf-c-compiler python-minimal libcap-dev libaio-dev libprotobuf-c0-dev libprotobuf-dev socat libseccomp-dev
  #- export GOPATH=~/gopath
  #- mkdir src bin pkg
  - sudo apt install -y lftp
  #- wget -c https://github.com/protocolbuffers/protobuf/releases/download/v3.7.1/protoc-3.7.1-linux-ppcle_64.zip
  #- sudo unzip protoc-3.7.1-linux-ppcle_64.zip -d /usr/local
  #- sudo apt install gcc make pkg-config unzip
  - cd $GOPATH/src/github.com/opencontainers/runc
  #- git clone https://github.com/opencontainers/runc.git
  #- cd runc
  - make
  - sudo make install
 # - go get github.com/opencontainers/runc
 # - cd $GOPATH/src/github.com/opencontainers/runc
 # - make
 # - sudo make install

install:
  #- sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-protobuf
  #- sudo chmod +x /usr/local/bin/protoc
  #- sudo chmod og+rx /usr/local/include/google /usr/local/include/google/protobuf /usr/local/include/google/protobuf/compiler
  #- sudo chmod -R og+r /usr/local/include/google/protobuf/
  #- protoc --version
  #- if [ "$TRAVIS_GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-seccomp ; fi
  #- if [ "$TRAVIS_GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-runc ; fi
  #- if [ "$TRAVIS_GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-cni ; fi
  #- if [ "$TRAVIS_GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-critools ; fi
  #- if [ "$TRAVIS_GOOS" = "linux" ]; then wget https://github.com/checkpoint-restore/criu/archive/v3.13.tar.gz -O /tmp/criu.tar.gz ; fi
  #- if [ "$TRAVIS_GOOS" = "linux" ]; then tar -C /tmp/ -zxf /tmp/criu.tar.gz ; fi
  #- if [ "$TRAVIS_GOOS" = "linux" ]; then cd /tmp/criu-3.13 && sudo make install-criu ; fi
  #- cd $TRAVIS_BUILD_DIR

script:
  #- export GOOS=$TRAVIS_GOOS
  #- export CGO_ENABLED=$TRAVIS_CGO_ENABLED
  #- GOOS=linux GO111MODULE=off script/setup/install-dev-tools
  #- go build -i . #NÃ£o executou...
  #- make build #Analisar a partir daqui...
  #- make binaries
  #- if [ "$TRAVIS_GOOS" = "linux" ]; then sudo make install ; fi
  #- if [ "$TRAVIS_GOOS" = "linux" ]; then make coverage ; fi
  #- sudo make release
  #- echo "primeiro LS"
  #- pwd
  #- ls
  #- cd _output/
  #- echo "segundo LS"
  #- pwd
  #- ls
  #- cd /home/travis/gopath/src/github.com/opencontainers
  - python3 ftp_version.py
  - python3 validation.py
  - bash build.sh

notifications:
  slack:
    rooms:
      - secure: "p+7jsGyXFMkq1SxKV+3zJWkpHcBWKmxaiKfW7yoBN7H8T+XSLyzttOnqbGg97cRvnfUW5dg485h8hxcvVfu4d2H9A5cfJKyIs7GqdFPi9MzrZFvQXTz7qs58r/MO1l5ks0W0OKvzv+vEmU2B6e+eMwq27RNnNC8QoMYBVEPI+E46PI3sJhh4dC4LcxqlN1SkDGrFu6Buv5TioefDsJ78DeXVVhgeI8X7jP8uG/A46mq4O857xMwEkwJdlofbhC8CYdtqjjOMrpuTorDI8HInxaWJlHasZ6TJl9hEeIeUp4Cq/KkO3s7uE1tA14OFMoNsVzFH+nN+zV5Rt2w02ehFaP66C3HxgsEgHXO/s/l0aZt1Hjmcczu86hJziZCKgtMj7OEdt+hRaNsvJy8epyG9rS3+xcXFk8Z/kJXcM/ZdNeIlViaqTyJdGf5HTcw3ZI7q5ywYHyaPLwxidqsSVq+qiLGb8D4s/Kvs2HRMGXKjnd30I+l887rxcc5GGSPpDQmYGszuTDMMQ5O3LH3eSAykQeZJbIQ0wKKA+33fSvGsCVLd46cXdls7+fA2+muiFMZG9tN9ICRvpJVZDNpPe0gFtzsFJNQtTQeGeoS7tQsdi/YCoJmcRVpjIp+sAipZJo7DSHdep5IvgYCqTL4GXqD6FeHZJBpszx9B+rdTiwOcbkg="
    on_success: change
    on_failure: change
